---
import { cva, type VariantProps } from "class-variance-authority";
import { twMerge } from "tailwind-merge";

export const tagOptions = ["h1", "h2", "h3", "h4", "h5", "h6"] as const;

const heading = cva("text-balance leading-heading", {
  variants: {
    variant: {
      default: "",
      accent: "text-accent",
    },
    uppercase: {
      true: "uppercase",
      false: "",
    },
    size: {
      sm: "text-xl",
      md: "text-2xl",
      lg: "text-7xl",
    },
  },
  defaultVariants: {
    uppercase: false,
    variant: "default",
    size: "md",
  },
});

export interface Props extends VariantProps<typeof heading> {
  tagType: (typeof tagOptions)[number];
  classes?: string;
}

const { classes, size, tagType, variant, uppercase, ...rest } = Astro.props;

const Tag = tagType;
---

<Tag
  class:list={[twMerge(heading({ size, variant, uppercase }), classes)]}
  {...rest}
>
  <slot />
</Tag>
