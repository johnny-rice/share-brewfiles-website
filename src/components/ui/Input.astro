---
import { Icon } from "astro-icon/components";
import Button from "./Button.astro";

type Props = {
  filter: string;
};

const { filter } = Astro.props;
---

<form
  class="relative rounded-full bg-white/10 w-full p-2 max-w-xl mx-auto flex gap-4 transition-all focus-within:ring-4 ring-offset-4 ring-offset-bkg ring-accent-bluemedium flex-row-reverse backdrop-blur-4xl"
  id="brew-search-form"
>
  <input
    type="search"
    name="brew-search"
    id="brew-search"
    value={filter}
    placeholder="Search Brews"
    autofocus={true}
    class="bg-transparent focus:outline-none w-full text-3xl uppercase tracking-widest font-mono"
  />
  <Button variant={"text"} size={"round"}>
    <Icon name="search" size={24} />
  </Button>
</form>

<style>
  /* clears the 'X' from Internet Explorer */
  input[type="search"]::-ms-clear {
    display: none;
    width: 0;
    height: 0;
  }
  input[type="search"]::-ms-reveal {
    display: none;
    width: 0;
    height: 0;
  }

  /* clears the 'X' from Chrome */
  input[type="search"]::-webkit-search-decoration,
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-results-button,
  input[type="search"]::-webkit-search-results-decoration {
    display: none;
  }
</style>

<script>
  const brewSearchForm = document.getElementById(
    "brew-search-form"
  ) as HTMLFormElement;
  const brewSearch = document.getElementById("brew-search") as HTMLInputElement;

  let debounceTimer: number | undefined;

  brewSearchForm.addEventListener("input", () => {
    if (debounceTimer) {
      clearTimeout(debounceTimer);
    }

    debounceTimer = window.setTimeout(() => {
      window.location.href = `/brewfiles?filter=${brewSearch.value}`;
    }, 500);
  });

  brewSearchForm?.addEventListener("submit", (event) => {
    event.preventDefault();
    window.location.href = `/brewfiles?filter=${brewSearch?.value}`;
  });
</script>
