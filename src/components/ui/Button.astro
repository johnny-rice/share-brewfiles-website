---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { twMerge } from "tailwind-merge";

const button = cva(
  "flex items-center gap-2 max-w-fit focus:outline-none transition-all focus-visible:ring-4 ring-offset-4 leading-tight ring-offset-bkg",
  {
    variants: {
      variant: {
        bland: "",
        default:
          "bg-white/10 ring-accent-bluemedium rounded-full hover:bg-white/20",
        accent:
          "bg-accent-bluedark rounded-full hover:bg-accent-bluemedium ring-accent-bluemedium",
        text: "ring-accent-bluemedium rounded-full hover:bg-white/10 hover:backdrop-blur-3xl",
        nav: "hover:bg-white/20 ring-accent-bluemedium rounded-full max-w-full",
        icon: "",
      },
      size: {
        default: "py-2 px-4",
        round: "p-2",
        large: "px-8 py-3 gap-4 text-2xl",
        icon: "",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {
  classes?: string;
}

const { classes, size, variant, ...rest } = Astro.props;
---

<button class:list={[twMerge(button({ size, variant }), classes)]} {...rest}>
  <slot />
</button>
