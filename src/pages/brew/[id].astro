---
import Button from "@/components/ui/Button.astro";
import Link from "@/components/ui/Link.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { brewfileLinkDictionary } from "@/lib/getBrewfileLink";
import type { Brews } from "@/types/brews";
import { Image } from "astro:assets";

// for PROD
const { id } = Astro.params;
const res = await fetch(`${Astro.url.origin}/api/getBrewfiles.json?id=${id}`);

if (!res.ok) return Astro.redirect("/");
const brews: Brews = await res.json();

const entry = brews.brews[0];
if (!entry) return Astro.redirect("/");
---

<BaseLayout
  title={`${entry.userInfo.username}â€™s Brewfile`}
  description={`All packages in ${entry.userInfo.username}'s brewfile.`}
>
  <div
    class="flex justify-center lg:justify-between items-center flex-wrap container pt-8 lg:pt-16 gap-8"
  >
    <div class="py-2 px-4 bg-white/10 rounded-full backdrop-blur-3xl">
      {entry.data.length} packages in this Brewfile
    </div>
    <Link
      href={`${entry.id}/personality`}
      variant={"accent"}
      classes="order-1 lg:order-none">Generate Dev Personality</Link
    >
    <div class="flex gap-2">
      <Link
        href={`https://github.com/${entry.userInfo.username}`}
        variant={"text"}>@{entry.userInfo.username}</Link
      >
      <Link
        href={`https://github.com/${entry.userInfo.username}`}
        variant={"icon"}
        size={"bland"}
        classes="rounded-full hover:opacity-80 group"
      >
        <Image
          src={`https://github.com/${entry.userInfo.username}.png`}
          alt={entry.userInfo.username}
          width="50"
          height="50"
          class="rounded-full grayscale group-hover:ring-4"
        />
      </Link>
    </div>
  </div>
  <div class="flex flex-wrap justify-center container">
    {
      entry.data.map((item) => (
        <Link
          variant={"tile"}
          size={"bland"}
          href={
            brewfileLinkDictionary[item.name] ??
            `https://google.com?q=${item.name}+package`
          }
          classes="backdrop-blur-3xl"
        >
          {item.name}
        </Link>
      ))
    }
  </div>
  <div class="flex flex-wrap justify-center">
    <Button variant="accent" size="large"
      ><span id="generate-personality"> Generate Personality </span>
    </Button>
  </div>
</BaseLayout>

<!-- TODO: Clean up url routing and account for when there's no personality yet. -->
<script define:vars={{ id, site: Astro.url.origin }}>
  const generatePersonalityBtn = document.getElementById(
    "generate-personality"
  );

  generatePersonalityBtn?.addEventListener("click", () => {
    const url = new URL(location.href + "/profile");
    history.replaceState({}, "", url.toString());
    location.reload();
  });
</script>
